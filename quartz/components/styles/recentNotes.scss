@use "../../styles/variables.scss" as *;

@media all and ($mobile) {
  .page > #quartz-body {
    // Shift page position when toggling Explorer on mobile.
    & > :not(.sidebar.left:has(.recent)) {
      transition: transform 300ms ease-in-out;
    }
    &.lock-scroll > :not(.sidebar.left:has(.recent)) {
      transform: translateX(100dvw);
      transition: transform 300ms ease-in-out;
    }

    // Sticky top bar (stays in place when scrolling down on mobile).
    .sidebar.left:has(.recent) {
      box-sizing: border-box;
      position: sticky;
      background-color: var(--light);
      padding: 1rem 0 1rem 0;
      margin: 0;
    }

    .hide-until-loaded ~ .recent-content {
      display: none;
    }
  }
}

.recent {
  display: flex;
  flex-direction: column;
  overflow-y: hidden;

  min-height: 1.2rem;
  flex: 0 1 auto;
  &.collapsed {
    flex: 0 1 1.2rem;
    & .fold {
      transform: rotateZ(-90deg);
    }
  }

  & .fold {
    margin-left: 0.5rem;
    transition: transform 0.3s ease;
    opacity: 0.8;
  }

  @media all and ($mobile) {
    order: -1;
    height: initial;
    overflow: hidden;
    flex-shrink: 0;
    align-self: flex-start;
    margin-top: auto;
    margin-bottom: auto;
  }

  button.mobile-recent {
    display: none;
  }

  button.desktop-recent {
    display: flex;
  }

  @media all and ($mobile) {
    button.mobile-recent {
      display: flex;
    }

    button.desktop-recent {
      display: none;
    }
  }

  &.desktop-only {
    @media all and not ($mobile) {
      display: flex;
    }
  }

  svg {
    pointer-events: all;
    transition: transform 0.35s ease;

    & > polyline {
      pointer-events: none;
    }
  }
}

button.mobile-recent,
button.desktop-recent {
  background-color: transparent;
  border: none;
  text-align: left;
  cursor: pointer;
  padding: 0;
  color: var(--dark);
  display: flex;
  align-items: center;

  & h2 {
    font-size: 1rem;
    display: inline-block;
    margin: 0;
  }
}

.recent-content {
  list-style: none;
  overflow: hidden;
  overflow-y: auto;
  margin-top: 0.5rem;

  & ul {
    overscroll-behavior: contain;
    list-style: none;
    margin-top: 1rem;
    padding-left: 0;

    & > li {
      margin: 1rem 0;

      .section > .desc > a {
        background-color: transparent;
        color: var(--dark);

        &.active {
          opacity: 1;
          color: var(--tertiary);
        }
      }

      .section > .meta {
        margin: 0 0 0.5rem 0;
        opacity: 0.6;
      }
    }
  }
}

.recent {
  @media all and ($mobile) {
    &.collapsed {
      flex: 0 0 34px;

      & > .recent-content {
        transform: translateX(-100vw);
        visibility: hidden;
      }
    }

    &:not(.collapsed) {
      flex: 0 0 34px;

      & > .recent-content {
        transform: translateX(0);
        visibility: visible;
      }
    }

    .recent-content {
      box-sizing: border-box;
      z-index: 100;
      position: absolute;
      top: 0;
      left: 0;
      margin-top: 0;
      background-color: var(--light);
      max-width: 100vw;
      width: 100%;
      transform: translateX(-100vw);
      transition:
        transform 200ms ease,
        visibility 200ms ease;
      overflow: hidden;
      padding: 4rem 0 2rem 0;
      height: 100dvh;
      max-height: 100dvh;
      visibility: hidden;
      
      & > .recent-ul {
        overflow-y: scroll;
        height: calc(100dvh - 5rem);
      }
    }

    .mobile-recent {
      margin: 0;
      padding: 5px;
      z-index: 101;

      .lucide-menu {
        stroke: var(--darkgray);
      }
    }
  }
}

.mobile-no-scroll {
  @media all and ($mobile) {
    overflow: hidden;
  }
}
